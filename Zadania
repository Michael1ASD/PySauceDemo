python decouple
config.env
typowanie
dobre praktywki: hinty - dodać typowanie w nawiasach do metody i rezultat po nawiaasie
dodać do parametrów domyślne wartości
polling frequency
BDD
logowanie w testach

logger jako dekorator do funkcji w klasach podrzędnych -
brak trace'a z loggera z wykonywania testów
dodać logger do handlers

python bdd

log_gen - bez log-gen

allure

@dekorator parametrize
mark





# Zadanie 1: Prosty Kalkulator
# Cel: Stwórz prosty kalkulator, który wykonuje podstawowe operacje matematyczne (dodawanie, odejmowanie, mnożenie, dzielenie).
# Instrukcje:
#
# Zaimplementuj klasę Calculator, która zawiera metody: add, subtract, multiply, divide.
# Każda metoda powinna przyjmować dwa argumenty i zwracać wynik operacji.
# Umożliw użytkownikowi wybór operacji z menu i wprowadzenie dwóch liczb.
# Wyświetl wynik w terminalu.
#
#
# Zadanie 2: System do Zarządzania Kontaktami
# Cel: Stwórz system do zarządzania kontaktami, który pozwala na dodawanie, usuwanie i wyświetlanie kontaktów.
# Instrukcje:
#
# Utwórz klasę Contact, która zawiera atrybuty name i phone_number.
# Utwórz klasę ContactManager, która przechowuje listę kontaktów i posiada metody do:
# dodawania kontaktów,
# usuwania kontaktów według nazwy,
# wyświetlania wszystkich kontaktów.
# Stwórz prosty interfejs tekstowy do interakcji użytkownika.
#
#
# Zadanie 3: Generowanie Liczb Fibonacciego
# Cel: Napisz program, który generuje liczby Fibonacciego.
# Instrukcje:
#
# Utwórz funkcję generate_fibonacci(n), która przyjmuje jako argument liczbę n (ilość liczb), a następnie zwraca listę n pierwszych liczb Fibonacciego.
# Umożliw użytkownikowi wprowadzenie liczby n.
# Wyświetl wygenerowane liczby w terminalu.
# Dodaj obsługę błędów dla przypadków, gdy n jest ujemne lub nie jest liczbą całkowitą.
#
#
# Zadanie 4: System Katalogowania Książek
# Cel: Zaimplementuj prosty system katalogowania książek.
# Instrukcje:
#
# Stwórz klasę Book z atrybutami title, author, year.
# Stwórz klasę Library do przechowywania listy książek.
# Umożliw użytkownikowi dodawanie książek do biblioteki i wyświetlanie wszystkich książek w formacie: Title: <title>, Author: <author>, Year: <year>.
# Dodaj opcję do wyszukiwania książek według tytułu.
#
#
# Zadanie 5: Prosty Quiz
# Cel: Stwórz prosty quiz, który zadaje pytania i ocenia odpowiedzi.
# Instrukcje:
#
# Utwórz klasę Question, która zawiera atrybuty question_text i correct_answer.
# Utwórz klasę Quiz, która przechowuje pytania i umożliwia zadawanie pytań użytkownikowi.
# Zaimplementuj metodę, która zadaje pytania i zbiera odpowiedzi od użytkownika.
# Na końcu wyświetl wynik (liczbę poprawnych odpowiedzi).